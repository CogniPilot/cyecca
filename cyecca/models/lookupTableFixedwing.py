import numpy as np
import cyecca
import casadi as ca

INTERP_DEFAULT = "linear"
# INTERP_DEFAULT = 'bspline'
TABLE_CHECK_TOL = 1e-9  # need to increase if using bspline


def build_tables():
    """
    Constructs force and moment tables for f16.
    """
    tables = {}

    def create_table2D(
        name,
        row_label,
        col_label,
        data,
        abs_row=False,
        abs_col=False,
        interp_method=INTERP_DEFAULT,
    ):
        """
        Creates a table interpolation function with x as rows and y as columns.
        """
        assert data[0, 0] == 0
        row_grid = data[1:, 0]
        col_grid = data[0, 1:]
        table_data = data[1:, 1:]

        interp = ca.interpolant(
            name + "_interp",
            interp_method,
            [row_grid, col_grid],
            table_data.ravel(order="F"),
        )
        x = ca.MX.sym("x")
        y = ca.MX.sym("y")
        if abs_row:
            xs = ca.fabs(x)
        else:
            xs = x
        if abs_col:
            ys = ca.fabs(y)
        else:
            ys = y
        func = ca.Function(
            "Cx", [x, y], [interp(ca.vertcat(xs, ys))], [row_label, col_label], [name]
        )

        # check
        for i, x in enumerate(row_grid):
            for j, y in enumerate(col_grid):
                assert ca.fabs(func(x, y) - table_data[i, j]) < TABLE_CHECK_TOL

        return func

    def create_damping():
        data = np.array(
            [
                [-10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],  # alpha, deg
                [
                    -0.267,
                    -0.110,
                    0.308,
                    1.34,
                    2.08,
                    2.91,
                    2.76,
                    2.05,
                    1.50,
                    1.49,
                    1.83,
                    1.21,
                ],  # CXq
                [
                    0.882,
                    0.852,
                    0.876,
                    0.958,
                    0.962,
                    0.974,
                    0.819,
                    0.483,
                    0.590,
                    1.21,
                    -0.493,
                    -1.04,
                ],  # CYr
                [
                    -0.108,
                    -0.108,
                    -0.188,
                    0.110,
                    0.258,
                    0.226,
                    0.344,
                    0.362,
                    0.611,
                    0.529,
                    0.298,
                    -2.27,
                ],  # CYp
                [
                    -8.80,
                    -25.8,
                    -28.9,
                    -31.4,
                    -31.2,
                    -30.7,
                    -27.7,
                    -28.2,
                    -29.0,
                    -29.8,
                    -38.3,
                    -35.3,
                ],  # CZq
                [
                    -0.126,
                    -0.026,
                    0.063,
                    0.113,
                    0.208,
                    0.230,
                    0.319,
                    0.437,
                    0.680,
                    0.100,
                    0.447,
                    -0.330,
                ],  # Clr
                [
                    -0.360,
                    -0.359,
                    -0.443,
                    -0.420,
                    -0.383,
                    -0.375,
                    -0.329,
                    -0.294,
                    -0.230,
                    -0.210,
                    -0.120,
                    -0.100,
                ],  # Clp
                [
                    -7.21,
                    -0.540,
                    -5.23,
                    -5.26,
                    -6.11,
                    -6.64,
                    -5.69,
                    -6.00,
                    -6.20,
                    -6.40,
                    -6.60,
                    -6.00,
                ],  # Cmq
                [
                    -0.380,
                    -0.363,
                    -0.378,
                    -0.386,
                    -0.370,
                    -0.453,
                    -0.550,
                    -0.582,
                    -0.595,
                    -0.637,
                    -1.02,
                    -0.840,
                ],  # Cnr
                [
                    0.061,
                    0.052,
                    0.052,
                    -0.012,
                    -0.013,
                    -0.024,
                    0.050,
                    0.150,
                    0.130,
                    0.158,
                    0.240,
                    0.150,
                ],
            ]
        )  # Cnp
        names = ["CXq", "CYr", "CYp", "CZq", "Clr", "Clp", "Cmq", "Cnr", "Cnp"]
        for i, name in enumerate(names):
            tables[name] = ca.interpolant(
                "{:s}_interp".format(name), INTERP_DEFAULT, [data[0, :]], data[i + 1, :]
            )
            # check
            for j, x in enumerate(data[0, :]):
                assert ca.fabs(tables[name](x) - data[i + 1, j]) < TABLE_CHECK_TOL

    create_damping()

    tables["Cx"] = create_table2D(
        name="Cx",
        row_label="alpha_deg",
        col_label="elev_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [
                    -24,
                    -0.099,
                    -0.081,
                    -0.081,
                    -0.063,
                    -0.025,
                    0.044,
                    0.097,
                    0.113,
                    0.145,
                    0.167,
                    0.174,
                    0.166,
                ],
                [
                    -12,
                    -0.048,
                    -0.038,
                    -0.040,
                    -0.021,
                    0.016,
                    0.083,
                    0.127,
                    0.137,
                    0.162,
                    0.177,
                    0.179,
                    0.167,
                ],  # elev, deg
                [
                    0,
                    -0.022,
                    -0.020,
                    -0.021,
                    -0.004,
                    0.032,
                    0.094,
                    0.128,
                    0.130,
                    0.154,
                    0.161,
                    0.155,
                    0.138,
                ],
                [
                    12,
                    -0.040,
                    -0.038,
                    -0.039,
                    -0.025,
                    0.006,
                    0.062,
                    0.087,
                    0.085,
                    0.100,
                    0.110,
                    0.104,
                    0.091,
                ],
                [
                    24,
                    -0.083,
                    -0.073,
                    -0.076,
                    -0.072,
                    -0.046,
                    0.012,
                    0.024,
                    0.025,
                    0.043,
                    0.053,
                    0.047,
                    0.040,
                ],
            ]
        ).T,
    )

    def create_Cy():
        beta_deg = ca.MX.sym("beta_deg")
        ail_deg = ca.MX.sym("ail_deg")
        rdr_deg = ca.MX.sym("rdr_deg")
        return ca.Function(
            "Cy",
            [beta_deg, ail_deg, rdr_deg],
            [-0.02 * beta_deg + 0.021 * ail_deg / 20 + 0.086 * rdr_deg / 30],
            ["beta_deg", "ail_deg", "rdr_deg"],
            ["Cy"],
        )

    tables["Cy"] = create_Cy()

    def create_Cz():  # Body Frame Lift Coefficient? + up
        alpha_deg = ca.MX.sym("alpha_deg")
        beta_deg = ca.MX.sym("beta_deg")
        elev_deg = ca.MX.sym("elev_deg")
        data = np.array(
            [
                [-10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [
                    -0.770,
                    -0.241,
                    0.100,
                    0.416,
                    0.731,
                    1.053,
                    1.366,
                    1.646,
                    1.917,
                    2.120,
                    2.248,
                    2.229,
                ],
            ]
        )
        interp = ca.interpolant("Cz_interp", INTERP_DEFAULT, [data[0, :]], data[1, :])
        return ca.Function(
            "Cz",
            [alpha_deg, beta_deg, elev_deg],
            [interp(alpha_deg) * (1 - (beta_deg / 57.3) ** 2) - 0.19 * elev_deg / 25.0],
            ["alpha_deg", "beta_deg", "elev_deg"],
            ["Cz"],
        )

    tables["Cz"] = create_Cz()

    tables["Cl"] = create_table2D(
        name="Cl",
        row_label="alpha_deg",
        col_label="beta_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [
                    5,
                    -0.001,
                    -0.004,
                    -0.008,
                    -0.012,
                    -0.016,
                    -0.019,
                    -0.020,
                    -0.020,
                    -0.015,
                    -0.008,
                    -0.013,
                    -0.015,
                ],
                [
                    10,
                    -0.003,
                    -0.009,
                    -0.017,
                    -0.024,
                    -0.030,
                    -0.034,
                    -0.040,
                    -0.037,
                    -0.016,
                    -0.002,
                    -0.010,
                    -0.019,
                ],  # beta, deg
                [
                    15,
                    -0.001,
                    -0.010,
                    -0.020,
                    -0.030,
                    -0.039,
                    -0.044,
                    -0.050,
                    -0.049,
                    -0.023,
                    -0.006,
                    -0.014,
                    -0.027,
                ],
                [
                    20,
                    0.000,
                    -0.010,
                    -0.022,
                    -0.034,
                    -0.047,
                    -0.046,
                    -0.059,
                    -0.061,
                    -0.033,
                    -0.036,
                    -0.035,
                    -0.035,
                ],
                [
                    25,
                    0.007,
                    -0.010,
                    -0.023,
                    -0.034,
                    -0.049,
                    -0.046,
                    -0.068,
                    -0.071,
                    -0.060,
                    -0.058,
                    -0.062,
                    -0.059,
                ],
                [
                    30,
                    0.009,
                    -0.011,
                    -0.023,
                    -0.037,
                    -0.050,
                    -0.047,
                    -0.074,
                    -0.079,
                    -0.091,
                    -0.076,
                    -0.077,
                    -0.076,
                ],
            ]
        ).T,
        abs_col=True,
    )

    tables["Cm"] = create_table2D(
        name="Cm",
        row_label="alpha_deg",
        col_label="elev_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [
                    -24,
                    0.205,
                    0.168,
                    0.186,
                    0.196,
                    0.213,
                    0.251,
                    0.245,
                    0.238,
                    0.252,
                    0.231,
                    0.198,
                    0.192,
                ],
                [
                    -12,
                    0.081,
                    0.077,
                    0.107,
                    0.110,
                    0.110,
                    0.141,
                    0.127,
                    0.119,
                    0.133,
                    0.108,
                    0.081,
                    0.093,
                ],  # elev, deg
                [
                    0,
                    -0.046,
                    -0.020,
                    -0.009,
                    -0.005,
                    -0.006,
                    0.010,
                    0.006,
                    -0.001,
                    0.014,
                    0.000,
                    -0.013,
                    0.032,
                ],
                [
                    12,
                    -0.174,
                    -0.145,
                    -0.121,
                    -0.127,
                    -0.129,
                    -0.102,
                    -0.097,
                    -0.113,
                    -0.087,
                    -0.084,
                    -0.069,
                    -0.006,
                ],
                [
                    24,
                    -0.259,
                    -0.202,
                    -0.184,
                    -0.193,
                    -0.199,
                    -0.150,
                    -0.160,
                    -0.167,
                    -0.104,
                    -0.076,
                    -0.041,
                    -0.005,
                ],
            ]
        ).T,
    )

    tables["Cn"] = create_table2D(
        name="Cn",
        row_label="alpha_deg",
        col_label="beta_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [
                    5,
                    0.018,
                    0.019,
                    0.018,
                    0.019,
                    0.019,
                    0.018,
                    0.013,
                    0.007,
                    0.004,
                    -0.014,
                    -0.017,
                    -0.033,
                ],
                [
                    10,
                    0.038,
                    0.042,
                    0.042,
                    0.042,
                    0.043,
                    0.039,
                    0.030,
                    0.017,
                    0.004,
                    -0.035,
                    -0.047,
                    -0.057,
                ],  # beta, deg
                [
                    15,
                    0.056,
                    0.057,
                    0.059,
                    0.058,
                    0.058,
                    0.053,
                    0.032,
                    0.012,
                    0.002,
                    -0.046,
                    -0.071,
                    -0.073,
                ],
                [
                    20,
                    0.064,
                    0.077,
                    0.076,
                    0.074,
                    0.073,
                    0.057,
                    0.029,
                    0.007,
                    0.012,
                    -0.034,
                    -0.065,
                    -0.041,
                ],
                [
                    25,
                    0.074,
                    0.086,
                    0.093,
                    0.089,
                    0.080,
                    0.062,
                    0.049,
                    0.022,
                    0.028,
                    -0.012,
                    -0.002,
                    -0.013,
                ],
                [
                    30,
                    0.079,
                    0.090,
                    0.106,
                    0.106,
                    0.096,
                    0.080,
                    0.068,
                    0.030,
                    0.064,
                    0.015,
                    0.011,
                    -0.001,
                ],
            ]
        ).T,
        abs_col=True,
    )

    tables["DlDa"] = create_table2D(
        name="DlDa",
        row_label="alpha_deg",
        col_label="beta_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [
                    -30,
                    -0.041,
                    -0.052,
                    -0.053,
                    -0.056,
                    -0.050,
                    -0.056,
                    -0.082,
                    -0.059,
                    -0.042,
                    -0.038,
                    -0.027,
                    -0.017,
                ],
                [
                    -20,
                    -0.041,
                    -0.053,
                    -0.053,
                    -0.053,
                    -0.050,
                    -0.051,
                    -0.066,
                    -0.043,
                    -0.038,
                    -0.027,
                    -0.023,
                    -0.016,
                ],
                [
                    -10,
                    -0.042,
                    -0.053,
                    -0.052,
                    -0.051,
                    -0.049,
                    -0.049,
                    -0.043,
                    -0.035,
                    -0.026,
                    -0.016,
                    -0.018,
                    -0.014,
                ],  # beta, deg
                [
                    0,
                    -0.040,
                    -0.052,
                    -0.051,
                    -0.052,
                    -0.048,
                    -0.048,
                    -0.042,
                    -0.037,
                    -0.031,
                    -0.026,
                    -0.017,
                    -0.012,
                ],
                [
                    10,
                    -0.043,
                    -0.049,
                    -0.048,
                    -0.049,
                    -0.043,
                    -0.042,
                    -0.042,
                    -0.036,
                    -0.025,
                    -0.021,
                    -0.016,
                    -0.011,
                ],
                [
                    20,
                    -0.044,
                    -0.048,
                    -0.048,
                    -0.047,
                    -0.042,
                    -0.041,
                    -0.020,
                    -0.028,
                    -0.013,
                    -0.014,
                    -0.011,
                    -0.010,
                ],
                [
                    30,
                    -0.043,
                    -0.049,
                    -0.047,
                    -0.045,
                    -0.042,
                    -0.037,
                    -0.003,
                    -0.013,
                    -0.010,
                    -0.003,
                    -0.007,
                    -0.008,
                ],
            ]
        ).T,
    )

    tables["DlDr"] = create_table2D(
        name="DlDr",
        row_label="alpha_deg",
        col_label="beta_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [
                    -30,
                    0.005,
                    0.017,
                    0.014,
                    0.010,
                    -0.005,
                    0.009,
                    0.019,
                    0.005,
                    -0.000,
                    -0.005,
                    -0.011,
                    0.008,
                ],
                [
                    -20,
                    0.007,
                    0.016,
                    0.014,
                    0.014,
                    0.013,
                    0.009,
                    0.012,
                    0.005,
                    0.000,
                    0.004,
                    0.009,
                    0.007,
                ],
                [
                    -10,
                    0.013,
                    0.013,
                    0.011,
                    0.012,
                    0.011,
                    0.009,
                    0.008,
                    0.005,
                    -0.002,
                    0.005,
                    0.003,
                    0.005,
                ],  # beta, deg
                [
                    0,
                    0.018,
                    0.015,
                    0.015,
                    0.014,
                    0.014,
                    0.014,
                    0.014,
                    0.015,
                    0.013,
                    0.011,
                    0.006,
                    0.001,
                ],
                [
                    10,
                    0.015,
                    0.014,
                    0.013,
                    0.013,
                    0.012,
                    0.011,
                    0.011,
                    0.010,
                    0.008,
                    0.008,
                    0.007,
                    0.003,
                ],
                [
                    20,
                    0.021,
                    0.011,
                    0.010,
                    0.011,
                    0.010,
                    0.009,
                    0.008,
                    0.010,
                    0.006,
                    0.005,
                    0.000,
                    0.001,
                ],
                [
                    30,
                    0.023,
                    0.010,
                    0.011,
                    0.011,
                    0.011,
                    0.010,
                    0.008,
                    0.010,
                    0.006,
                    0.014,
                    0.020,
                    0.000,
                ],
            ]
        ).T,
    )

    tables["DnDa"] = create_table2D(
        name="DnDa",
        row_label="alpha_deg",
        col_label="beta_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [
                    -30,
                    0.001,
                    -0.027,
                    -0.017,
                    -0.013,
                    -0.012,
                    -0.016,
                    0.001,
                    0.017,
                    0.011,
                    0.017,
                    0.008,
                    0.016,
                ],
                [
                    -20,
                    0.002,
                    -0.014,
                    -0.016,
                    -0.016,
                    -0.014,
                    -0.019,
                    -0.021,
                    0.002,
                    0.012,
                    0.015,
                    0.015,
                    0.011,
                ],
                [
                    -10,
                    -0.006,
                    -0.008,
                    -0.006,
                    -0.006,
                    -0.005,
                    -0.008,
                    -0.005,
                    0.007,
                    0.004,
                    0.007,
                    0.006,
                    0.006,
                ],  # beta, deg
                [
                    0,
                    -0.011,
                    -0.011,
                    -0.010,
                    -0.009,
                    -0.008,
                    -0.006,
                    0.000,
                    0.004,
                    0.007,
                    0.010,
                    0.004,
                    0.010,
                ],
                [
                    10,
                    -0.015,
                    -0.015,
                    -0.014,
                    -0.012,
                    -0.011,
                    -0.008,
                    -0.002,
                    0.002,
                    0.006,
                    0.012,
                    0.011,
                    0.011,
                ],
                [
                    20,
                    -0.024,
                    -0.010,
                    -0.004,
                    -0.002,
                    -0.001,
                    0.003,
                    0.014,
                    0.006,
                    -0.001,
                    0.004,
                    0.004,
                    0.006,
                ],
                [
                    30,
                    -0.022,
                    0.002,
                    -0.003,
                    -0.005,
                    -0.003,
                    -0.001,
                    -0.009,
                    -0.009,
                    -0.001,
                    0.003,
                    -0.002,
                    0.001,
                ],
            ]
        ).T,
    )

    tables["DnDr"] = create_table2D(
        name="DnDr",
        row_label="alpha_deg",
        col_label="beta_deg",
        data=np.array(
            [  # alpha, deg
                [0, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
                [
                    -30,
                    -0.018,
                    -0.052,
                    -0.052,
                    -0.052,
                    -0.054,
                    -0.049,
                    -0.059,
                    -0.051,
                    -0.030,
                    -0.037,
                    -0.026,
                    -0.013,
                ],
                [
                    -20,
                    -0.028,
                    -0.051,
                    -0.043,
                    -0.046,
                    -0.045,
                    -0.049,
                    -0.057,
                    -0.052,
                    -0.030,
                    -0.033,
                    -0.030,
                    -0.008,
                ],
                [
                    -10,
                    -0.037,
                    -0.041,
                    -0.038,
                    -0.040,
                    -0.040,
                    -0.038,
                    -0.037,
                    -0.030,
                    -0.027,
                    -0.024,
                    -0.019,
                    -0.013,
                ],  # beta, deg
                [
                    0,
                    -0.048,
                    -0.045,
                    -0.045,
                    -0.045,
                    -0.044,
                    -0.045,
                    -0.047,
                    -0.048,
                    -0.049,
                    -0.045,
                    -0.033,
                    -0.016,
                ],
                [
                    10,
                    -0.043,
                    -0.044,
                    -0.041,
                    -0.041,
                    -0.040,
                    -0.038,
                    -0.034,
                    -0.035,
                    -0.035,
                    -0.029,
                    -0.022,
                    -0.009,
                ],
                [
                    20,
                    -0.052,
                    -0.034,
                    -0.036,
                    -0.036,
                    -0.035,
                    -0.028,
                    -0.024,
                    -0.023,
                    -0.020,
                    -0.016,
                    -0.010,
                    -0.014,
                ],
                [
                    30,
                    -0.062,
                    -0.034,
                    -0.027,
                    -0.028,
                    -0.027,
                    -0.027,
                    -0.023,
                    -0.023,
                    -0.019,
                    -0.009,
                    -0.025,
                    -0.010,
                ],
            ]
        ).T,
    )
    return tables
